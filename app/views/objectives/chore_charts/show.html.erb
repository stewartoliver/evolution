<main class="flex-1 p-6 bg-background-light dark:bg-background-dark text-text-light dark:text-text-dark">
  <div class="flex flex-col lg:flex-row gap-4 lg:gap-6">
    <!-- Left Column - Chore Chart Details -->
    <div class="flex flex-col gap-6 lg:w-1/3">
      <!-- Header Section -->
      <div class="p-6 bg-background-card dark:bg-background-card-dark rounded-lg shadow-md">
        <div class="flex justify-between items-center mb-4">
          <%= link_to :back, class: "flex gap-1 items-center font-semibold text-text-light dark:text-text-dark hover:opacity-80 whitespace-nowrap w-min" do %>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="size-5">
              <path stroke-linecap="round" stroke-linejoin="round" d="m11.25 9-3 3m0 0 3 3m-3-3h7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
            </svg>
            Back
          <% end %>
          <%= link_to edit_objectives_chore_chart_path(@chore_chart), class: "text-primary-500 hover:text-primary-600 transition" do %>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 0 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487zm0 0L19.5 7.125" />
            </svg>
          <% end %>
        </div>
        <div class="flex flex-col gap-4">
          <div>
            <h1 class="text-3xl font-bold text-text-light dark:text-text-dark">
              <%= @chore_chart.name %>
            </h1>
            <%= render_breadcrumbs %>
            <div class="mt-2 px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 rounded-full text-sm font-medium inline-block">
              <%= @chore_chart.rotation_frequency || "No rotation set" %>
            </div>
          </div>
          <div class="prose dark:prose-invert max-w-none">
            <p class="text-text-sub dark:text-text-sub-dark">
              <%= @chore_chart.description.present? ? @chore_chart.description : "No description provided" %>
            </p>
          </div>
        </div>
      </div>

      <!-- Schedule Details -->
      <div class="p-6 bg-background-card dark:bg-background-card-dark rounded-lg shadow-md">
        <h2 class="text-xl font-semibold mb-4">Schedule Details</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div class="p-4 bg-background-input-light dark:bg-background-input-dark rounded-lg">
            <div class="text-sm font-medium text-text-sub dark:text-text-sub-dark">Rotation Frequency</div>
            <div class="mt-1 text-lg font-semibold text-text-light dark:text-text-dark">
              <%= @chore_chart.rotation_frequency || "Not set" %>
            </div>
          </div>
          <div class="p-4 bg-background-input-light dark:bg-background-input-dark rounded-lg">
            <div class="text-sm font-medium text-text-sub dark:text-text-sub-dark">Start Date</div>
            <div class="mt-1 text-lg font-semibold text-text-light dark:text-text-dark">
              <%= @chore_chart.start_date&.strftime("%B %d, %Y") || "Not set" %>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Right Column - Chores List -->
    <div class="flex flex-col gap-6 lg:w-2/3">
      <div id="chore-list-table" data-chore-chart-id="<%= @chore_chart.id %>"></div>
    </div>
  </div>
</main>

<% content_for :head do %>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      console.log('DOM Content Loaded');
      const container = document.getElementById('chore-list-table');
      console.log('Container:', container);
      
      if (container) {
        const choreChartId = container.dataset.choreChartId;
        console.log('Chore Chart ID:', choreChartId);
        
        try {
          const root = ReactDOM.createRoot(container);
          console.log('Created root');
          
          root.render(
            React.createElement(ChoreListTable, { choreChartId: choreChartId })
          );
          console.log('Rendered component');
        } catch (error) {
          console.error('Error rendering component:', error);
        }
      }
    });
  </script>
<% end %>
